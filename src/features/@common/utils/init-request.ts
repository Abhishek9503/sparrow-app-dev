import type { TabDocument } from "$lib/database/app.database";
import {
  AuthSection,
  AuthType,
  ItemType,
  RequestDataType,
  RequestDataset,
  RequestDefault,
  RequestMethod,
  RequestSection,
  ResponseFormatter,
  ResponseSection,
} from "$lib/utils/enums";

class InitRequest {
  private _request: TabDocument;
  constructor(id: string, _workspaceId: string, date: string) {
    this._request = {
      id,
      name: RequestDefault.NAME,
      type: ItemType.REQUEST,
      description: "",
      source: "USER",
      isDeleted: false,
      activeSync: false,
      property: {
        request: {
          method: RequestMethod.GET,
          body: {
            raw: "",
            urlencoded: [
              {
                key: "",
                value: "",
                checked: false,
              },
            ],
            formdata: {
              text: [
                {
                  key: "",
                  value: "",
                  checked: false,
                },
              ],
              file: [
                {
                  key: "",
                  value: "",
                  checked: false,
                  base: "",
                },
              ],
            },
          },
          url: "",
          headers: [
            {
              key: "",
              value: "",
              checked: false,
            },
          ],
          queryParams: [
            {
              key: "",
              value: "",
              checked: false,
            },
          ],
          autoGeneratedHeaders: [
            {
              key: "Accept",
              value: "*/*",
              checked: true,
            },
            {
              key: "Connection",
              value: "keep-alive",
              checked: true,
            },
          ],
          state: {
            raw: RequestDataType.TEXT,
            dataset: RequestDataset.NONE,
            auth: AuthType.NO_AUTH,
            section: RequestSection.PARAMETERS,
            responseSection: ResponseSection.RESPONSE,
            responseRaw: RequestDataType.TEXT,
            responseFormatter: ResponseFormatter.PRETTY,
            additions: "",
            isSaveDescription: true,
            requestInProgress: false,
            descriptionInProgress: false,
          },
          auth: {
            bearerToken: "",
            basicAuth: {
              username: "",
              password: "",
            },
            apiKey: {
              authKey: "",
              authValue: "",
              addTo: AuthSection.HEADER,
            },
          },
          response: {
            headers: "",
            status: "",
            body: "",
            time: 0,
            size: 0,
          },
          requestInProgress: false,
          save: {
            api: true,
            description: true,
          },
        },
      },
      save: false,
      path: {
        workspaceId: _workspaceId,
        collectionId: "",
        folderId: "",
        folderName: "",
      },
      saveInProgress: false,
      isActive: true,
      createdAt: date,
    };
  }
  public getValue() {
    return this._request;
  }
}

export { InitRequest };

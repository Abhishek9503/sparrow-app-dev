name: Mac Build

on:
  push:
    branches:
      - development
  workflow_dispatch:

env: 
    VITE_API_URL: ${{ secrets.VITE_API_URL_DEV }}
    VITE_MIX_PANEL_TOKEN: ${{ secrets.VITE_MIX_PANEL_TOKEN }}
    VITE_ENABLE_MIX_PANEL: ${{ secrets.VITE_ENABLE_MIX_PANEL_DEV }}
    VITE_API_TIMEOUT: ${{ secrets.VITE_API_TIMEOUT }}
    VITE_SPARROW_SUPPORT_EMAIL: ${{ secrets.VITE_SPARROW_SUPPORT_EMAIL }}
    VITE_AUTH_URL: ${{ secrets.VITE_AUTH_URL_DEV }}
    VITE_SPARROW_GITHUB: ${{ secrets.VITE_SPARROW_GITHUB }}
    VITE_SPARROW_DOWNLOAD_LINK: ${{ secrets.VITE_SPARROW_DOWNLOAD_LINK }}
    ACTIONS_ALLOW_UNSECURE_COMMANDS: true

jobs:
  release_macos:
    runs-on: macos-latest
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Rust setup
        uses: dtolnay/rust-toolchain@stable

      - name: Sync node version and setup cache
        uses: actions/setup-node@v3
        with:
          node-version: '20.8'

      - name: Update updater endpoint in tauri.conf.json file
        run: |
          content=$(<src-tauri/tauri.conf.json)
          newContent=$(echo "$content" | sed 's|"https://{{UPDATER_URL}}/updater/{{target}}/{{arch}}/{{current_version}}"|"https://${{ secrets.UPDATER_ENDPOINT_DEV }}/updater/{{target}}/{{arch}}/{{current_version}}"|g')
          echo "$newContent" > src-tauri/tauri.conf.json
        shell: bash

      - name: Build Tauri App
        run: |
          yarn install
          yarn tauri build --debug
        env:
          APPLE_SIGNING_IDENTITY: "${{ secrets.APPLE_SIGNING_IDENTITY }}"
          APPLE_CERTIFICATE: "${{ secrets.APPLE_CERTIFICATE }}"
          APPLE_CERTIFICATE_PASSWORD: "${{ secrets.APPLE_CERTIFICATE_PASSWORD }}" 
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
          GITHUB_TOKEN: ${{ secrets.PR_GITHUB_TOKEN }}
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_PASSWORD: ${{ secrets.APPLE_PASSWORD }}
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
      
      - name: file content
        run: cat /Users/runner/work/sparrow-app/sparrow-app/src-tauri/target/debug/bundle/macos/*.sig
      
      - name: Install AWS CLI
        run: |
          curl "https://awscli.amazonaws.com/AWSCLIV2.pkg" -o "AWSCLIV2.pkg"
          sudo installer -pkg AWSCLIV2.pkg -target /
          aws --version
      - name: Upload File to S3
        run: |
          aws s3 cp /Users/runner/work/sparrow-app/sparrow-app/src-tauri/target/debug/bundle/macos s3://sparrow-release-assests-dev --recursive --exclude "*" --include "*.gz"
          
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Install App Center CLI
        run: |
          npm install -g appcenter-cli@latest

      - name: Get PR Branch Name
        id: pr_branch
        run: echo "::set-output name=branch::$(echo ${{ github.head_ref }})"

      - name: Upload to App Center
        run: |
          appcenter login --token ${{ secrets.APPCENTER_API_TOKEN }}
          branch_name="${{ steps.pr_branch.outputs.branch }}"
          echo "Branch Name: $branch_name"
          appcenter distribute release -f /Users/runner/work/sparrow-app/sparrow-app/src-tauri/target/debug/bundle/dmg/*.dmg -g Collaborators --app techdome/Sparrow-1 --build-version test-${branch_name} --build-number ${{ github.run_number }}
          
      - name: status check and upload
        uses: neonidian/teams-notify-build-status@v3
        if: always()
        with:
          webhookUrl: |
            ${{ secrets.TEAMS_INCOMING_WEBHOOK_URL }}
          message: |
            ðŸš€ **Build Status Update** ðŸš€
            The workflow (sparrow-app for **Mac**) has completed with status: **${{ job.status }}**.
            ðŸ‘‰ Check it out latest release here [AppCenter](https://appcenter.ms/users/techdome/apps/Sparrow-mac)!
          titleBackgroundColor: ${{ job.status }}
        env:
          SHOULD_DISPLAY_VIEW_COMMIT_BUTTON: true
